plugins { // 일반 java 파일에서 스프링부트 파일로 설정변경
    id 'java'
    id 'org.springframework.boot' version '3.0.2'
    id 'io.spring.dependency-management' version '1.1.0' // 스피링의 의존성을 자동관리
}

group = 'com.petposting' // 지정한 그룹이름. 자신의 도메인
version = '1.0'
sourceCompatibility = '17'

repositories { // 의존성 주입 저장소
    mavenCentral()
}

dependencies { //필요한 기능의 의존성 주입
    // 스프링부트 웹기능
    implementation 'org.springframework.boot:spring-boot-starter-web'
    // 테스트 기능
    testImplementation 'org.springframework.boot:spring-boot-starter-test'
    // 스프링 데이터 JPA
    implementation 'org.springframework.boot:spring-boot-starter-data-jpa'
    // H2 인메모리 데이터베이스
    runtimeOnly 'com.h2database:h2'
    //롬북: 반복 메서드 작성 작업을 줄여주는 라이브러리
    compileOnly 'org.projectlombok:lombok'
    annotationProcessor 'org.projectlombok:lombok'
    // 타임리프 사용을 위한 의존성 추가
    implementation 'org.springframework.boot:spring-boot-starter-thymeleaf'
    // 스프링 시큐리티를 사용하기 위한 스타터 추가
    implementation 'org.springframework.boot:spring-boot-starter-security'
    // 타임리프에서 스프링 시큐리티를 사용하기 위한 의존성 추가
    implementation 'org.thymeleaf.extras:thymeleaf-extras-springsecurity6'
    // 스프링 시큐리티를 테스트하기 위한 의존성 추가
    testImplementation 'org.springframework.security:spring-security-test'

    testAnnotationProcessor 'org.projectlombok:lombok'
    testImplementation 'org.projectlombok:lombok'
    implementation 'io.jsonwebtoken:jjwt:0.9.1' // 자바 JWT 라이브러리
    implementation 'javax.xml.bind:jaxb-api:2.3.1' // XML 문서와 Java 객체 간 매핑 자동화

    // OAuth2를 사용하기 위한 스타터 추가
    implementation 'org.springframework.boot:spring-boot-starter-oauth2-client'

    // aws mysql 의존성 추가
    implementation 'mysql:mysql-connector-java'
}

test {
    useJUnitPlatform()
}